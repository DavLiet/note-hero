{"version":3,"sources":["components/cartoon.png","firebase.js","components/SignIn.js","components/SignUp.js","components/NoteThumbnail.js","components/UserNotes.js","components/ImageForm.js","components/NavBar.js","components/YourNote.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","auth","SignIn","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","bind","assertThisInitialized","submitSignIn","state","email","password","e","setState","defineProperty","target","name","value","_this2","preventDefault","signInWithEmailAndPassword","then","console","log","history","push","concat","currentUser","catch","alert","react_default","a","createElement","id","style","color","textDecoration","onSubmit","class","type","placeholder","Component","withRouter","SignUp","createUserWithEmailAndPassword","NoteThumbnail","imgURL","title","uniqueKey","text","deletePost","updateNoteText","_this$props","deleteAction","key","textVal","posts","forEach","post","className","onClick","Link","to","pathname","src","alt","width","UserNotes","username","storageRef","storage","ref","database","deleteNote","getUsername","user","split","on","snapshot","tempArr","hasChildren","el","child","val","toConsumableArray","_this3","onAuthStateChanged","authUser","getPosts","userName","_this4","remove","index","filter","_","i","_this5","map","src_components_NoteThumbnail","require","ImageForm","editableText","currFileUrl","isFetching","handleFile","makeRequest","saveText","updateText","updateTitle","textToSave","imageURL","titleToSave","url","body","requests","image","source","imageUri","features","maxResults","axios","response","data","responses","fullTextAnnotation","document","getElementById","err","uploadedFile","files","put","totalBytes","metadata","getDownloadURL","error","textAlign","index_es","icon","faSync","size","spin","accept","cols","rows","NavBar","signOut","authState","YourNote","isEditing","location","enableEditing","submitChanges","cancelChanges","getText","update","displayedText","editingText","Home","App","BrowserRouter","src_components_NavBar","Route","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.88a378a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cartoon.6ed041ae.png\";","import firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyBulew_BaByeY3dozl-MM537yQUS9-K8P8\",\n    authDomain: \"final-project-4678c.firebaseapp.com\",\n    databaseURL: \"https://final-project-4678c.firebaseio.com\",\n    projectId: \"final-project-4678c\",\n    storageBucket: \"final-project-4678c.appspot.com\",\n    messagingSenderId: \"942991858994\"\n}\n\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport default firebase;\n","import React, { Component } from 'react';\nimport './SignIn.css';\n// import firebase from 'firebase';\nimport { auth } from '../firebase';\nimport { withRouter } from \"react-router-dom\";\n\nclass SignIn extends Component {\n    constructor(props) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n        this.submitSignIn = this.submitSignIn.bind(this);\n        this.state = {\n            email: '',\n            password: '',\n        }\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    submitSignIn(e) {\n        e.preventDefault();\n\n        // var { auth } = this.props.location.state;\n        auth.signInWithEmailAndPassword(this.state.email, this.state.password).then(() => {\n            console.log(\"SUCCESSFUL SIGNIN\");\n            this.props.history.push(\"/09-final-project-david_lie-tjauw/\");\n            console.log(`USER: ${auth.currentUser}`)\n\n        }).catch((e) => { alert(`The following errror occurred: \\n ${e}`) })\n\n    }\n\n    render() {\n        return (\n            <div id=\"signIn\">\n                <h1 style={{ color: '#34495e', textDecoration: 'none' }}>Sign In to NoteHero</h1>\n                <form onSubmit={this.submitSignIn}>\n                    <input class=\"signInField\" name=\"email\" onChange={this.onChange} type=\"text\" placeholder=\"Email Address\" />\n                    <input class=\"signInField\" name=\"password\" onChange={this.onChange} type=\"text\" placeholder=\"Password\" />\n                    <button id=\"signInButton\" type=\"submit\">Sign In</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(SignIn);\n","import React, { Component } from 'react';\nimport './SignUp.css';\nimport { auth } from '../firebase';\nimport { withRouter } from \"react-router-dom\";\n\n\nclass SignUp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n        }\n        this.submitSignIn = this.submitSignIn.bind(this);\n        this.onChange = this.onChange.bind(this);\n\n\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    submitSignIn(e) {\n        e.preventDefault();\n\n        // var { auth } = this.props.location.state;\n        auth.createUserWithEmailAndPassword(this.state.email, this.state.password).then(() => {\n            this.props.history.push(\"/09-final-project-david_lie-tjauw/\");\n        }).catch((e) => { alert(`The following errror occurred: \\n ${e}`) })\n\n    }\n\n    render() {\n        return (\n            <div id=\"signUp\">\n                <h1 style={{ color: '#34495e', textDecoration: 'none' }}>Sign Up for NoteHero</h1>\n                <form onSubmit={this.submitSignIn}>\n                    <input class=\"signUpField\" name=\"email\" onChange={this.onChange} type=\"text\" placeholder=\"Email Address\" />\n                    <input class=\"signUpField\" name=\"password\" onChange={this.onChange} type=\"text\" placeholder=\"Password\" />\n                    <button id=\"signUpButton\" type=\"submit\">Sign Up</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(SignUp);\n","import React, { Component } from 'react';\nimport './NoteThumbnail.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nclass NoteThumbnail extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            imgURL: '',\n            title: '',\n            uniqueKey: '',\n            text: '',\n        }\n        this.deletePost = this.deletePost.bind(this);\n        this.updateNoteText = this.updateNoteText.bind(this);\n    }\n\n    componentDidMount() {\n        const { imgURL, title, uniqueKey, text } = this.props;\n        this.setState({ imgURL })\n        this.setState({ title })\n        this.setState({ uniqueKey })\n        this.setState({ text })\n    }\n\n    deletePost() {\n        this.props.deleteAction(this.state.uniqueKey)\n    }\n\n    updateNoteText(key, textVal) {\n        this.state.posts.forEach((post) => {\n            if (post.key === key) {\n                post.text = textVal;\n            }\n        })\n    }\n\n    render() {\n        console.log(`notethumbnail: ${this.state.uniqueKey}`)\n        return (\n            <div id=\"thumbnail\">\n                <div class=\"header\">\n                    <h1>{this.state.title}</h1>\n                    <button className=\"delete\" onClick={this.deletePost}>Delete</button>\n                    <Link className=\"seeNote\" to={{\n                        pathname: \"/09-final-project-david_lie-tjauw/yourNote\",\n                        state: {\n                            text: this.state.text,\n                            key: this.state.uniqueKey,\n                            title: this.state.title,\n                        }\n                    }}><button>View/Edit</button></Link>\n\n                </div>\n                <img src={this.state.imgURL} alt=\"Avatar\" style={{ width: '100%' }} />\n            </div>\n        );\n    }\n}\n\nexport default NoteThumbnail;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './UserNotes.css';\nimport { auth } from '../firebase';\nimport firebase from '../firebase';\nimport NoteThumbnail from './NoteThumbnail';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport { throws } from 'assert';\n\n// var firebase = require('firebase');\n\n\nclass UserNotes extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            posts: [],\n            username: ``,\n        }\n\n        var storageRef = firebase.storage().ref();\n        this.storageRef = storageRef;\n\n        var database = firebase.database();\n        this.database = database;\n\n        this.deleteNote = this.deleteNote.bind(this);\n        this.getUsername = this.getUsername.bind(this);\n        this.updateNoteText = this.updateNoteText.bind(this);\n\n        console.log(firebase.auth().currentUser)\n    }\n\n\n    getUsername() {\n        let userName;\n\n        // while (auth === null) {\n        //     console.log(\"loading\")\n        // }\n        // userName = auth.currentUser.email.split('@')[0];\n        return userName;\n    }\n\n    // componentWillMount\n\n    getPosts(username) {\n\n\n        let user = username.split('@')[0];\n        this.setState({ username: user })\n\n\n        this.database.ref(user).on(\"value\", function (snapshot) {\n            console.log('USER NOTES IS BEING RETRIEVED AGAIN')\n            // console.log(snapshot.child('text').key.val())\n            // console.log(snapshot.child('imgURL').val())\n\n            let tempArr = []\n            // console.log(snapshot.child('text').val())\n            // console.log(snapshot.child('title').val())\n            if (snapshot.hasChildren()) {\n                snapshot.forEach((el) => {\n                    let post = {\n                        'key': el.key,\n                        'text': el.child('text').val(),\n                        'imgURL': el.child('imgURL').val(),\n                        'title': el.child('title').val()\n                    }\n                    tempArr.push(post)\n                    this.setState({ posts: [...this.state.posts, post] })\n\n                })\n            }\n\n            this.setState({ posts: [...tempArr] })\n\n\n        }.bind(this))\n    }\n    componentDidMount() {\n        auth.onAuthStateChanged((authUser) => {\n            authUser\n                ? this.getPosts(authUser.email)\n                : this.setState({ userName: null })\n\n        })\n    }\n\n\n    deleteNote(uniqueKey) {\n        // console.log(this.getUsername())\n        this.database.ref(`${this.state.username}/${uniqueKey}`).remove().then(() => { console.log(`Successful deletion: ${uniqueKey}`) }).catch(() => { console.log(\"There was an error when deleetintgf....\") })\n\n        this.state.posts.forEach((post, index) => {\n            if (post.key === uniqueKey) {\n                this.setState({\n                    posts: this.state.posts.filter((_, i) => i !== index)\n                });\n            }\n        })\n    }\n\n    updateNoteText(key, textVal) {\n        this.state.posts.forEach((post) => {\n            if (post.key === key) {\n                post.text = textVal;\n            }\n        })\n    }\n\n\n\n\n    render() {\n        return (\n            <div id=\"posts\">\n                {this.state.posts.map((post, i) => {\n                    console.log(post.key)\n                    return (\n\n                        <NoteThumbnail deleteAction={this.deleteNote} key={post.key} uniqueKey={post.key} text={post.text} imgURL={post.imgURL} title={post.title} />\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default UserNotes;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './ImageForm.css';\nimport { auth } from '../firebase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSync } from '@fortawesome/free-solid-svg-icons'\n\n\n\nvar firebase = require('firebase');\n\n\nclass ImageForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editableText: null,\n      currFileUrl: null,\n      title: null,\n      isFetching: false,\n    }\n    this.handleFile = this.handleFile.bind(this)\n    this.makeRequest = this.makeRequest.bind(this)\n    this.saveText = this.saveText.bind(this)\n    this.updateText = this.updateText.bind(this)\n    this.updateTitle = this.updateTitle.bind(this)\n\n\n    var storageRef = firebase.storage().ref();\n    this.storageRef = storageRef;\n\n    var database = firebase.database();\n    this.database = database;\n\n\n\n  }\n\n\n  saveText() {\n    let textToSave = this.state.editableText;\n    let imageURL = this.state.currFileUrl;\n    let titleToSave = this.state.title;\n    if (textToSave && imageURL && titleToSave) {\n\n\n      let userName = auth.currentUser.email.split('@')[0];\n      this.database.ref(`${userName}`).push({\n        text: `${textToSave}`,\n        imgURL: `${imageURL}`,\n        title: `${titleToSave}`\n      }).then(() => {\n        console.log(\"Text successfully saved\")\n        this.setState({\n          editableText: '',\n          title: '',\n          currFileUrl: null,\n          isFetching: false\n        })\n      });\n    }\n    else {\n      alert(\"Please fill out all fields\")\n    }\n  }\n\n  makeRequest(url) {\n    let body = {\n      \"requests\": [\n        {\n          \"image\": {\n            \"source\": {\n              \"imageUri\": url\n            }\n          },\n          \"features\": [\n            {\n              \"type\": \"TEXT_DETECTION\",\n              \"maxResults\": 10,\n            }\n          ],\n        }\n      ]\n    }\n    axios.post('https://vision.googleapis.com/v1/images:annotate?key=AIzaSyCwP9xFPEqrxkOySq8r5GQ0Cyz-HUClmo0', body)\n      .then((response) => {\n        console.log(\"DONE\")\n        this.setState({ editableText: response.data.responses[0].fullTextAnnotation.text })\n        document.getElementById(\"editThis\").value = this.state.editableText;\n\n        this.setState({ isFetching: false })\n        // console.log((response.data.responses[0].fullTextAnnotation.text))\n      }).catch((err) => {\n        console.log(err)\n        this.setState({ isFetching: false })\n\n      });\n  }\n\n  updateText(e) {\n    this.setState({ editableText: e.target.value })\n  }\n\n  updateTitle(e) {\n    // this.setState({ title: document.getElementById(\"title\").value })\n    this.setState({ title: e.target.value })\n\n  }\n\n  handleFile(e) {\n\n    this.setState({ isFetching: true })\n\n    var uploadedFile = e.target.files[0]\n\n    this.storageRef.child('images/' + uploadedFile.name).put(uploadedFile).then(function (snapshot) {\n      console.log('Uploaded', snapshot.totalBytes, 'bytes.');\n      console.log('File metadata:', snapshot.metadata);\n      // Let's get a download URL for the file.\n      snapshot.ref.getDownloadURL().then(function (url) {\n        console.log('File available at', url);\n        this.setState({ currFileUrl: url })\n        this.makeRequest(url)\n      }.bind(this));\n    }.bind(this)).catch(function (error) {\n      // [START onfailure]\n      console.error('Upload failed:', error);\n      // [END onfailure]\n    });\n    // console.log(url)\n    // this.makeRequest(url)\n\n\n  }\n  render() {\n    return (\n      <div id=\"ImageForm\">\n        <div id=\"directions\">\n          <h1 style={{ color: '#34495e', textDecoration: 'none', textAlign: 'center' }}>Upload Your Notes to NoteHero</h1>\n          <p>NoteHero uses the power of Machine Learning to <i>extract</i> text from pictures of your class notes.</p>\n          <p>To start, simply upload a picture of your class notes and then NoteHero will take care of the rest!</p>\n        </div>\n        {this.state.isFetching ? <FontAwesomeIcon icon={faSync} size=\"6x\" id=\"loadingIndicator\" spin /> : null}\n        <button id=\"saveText\" onClick={this.saveText}>Save Text</button>\n        <input type=\"file\" accept=\"image/*\" id=\"file-input\" onChange={this.handleFile} />\n        <textarea id=\"editThis\" value={this.state.editableText} onChange={this.updateText} placeholder=\"Your Notes Here...\" cols=\"50\" rows=\"25\"></textarea>\n        <input type=\"text\" id=\"title\" value={this.state.title} placeholder=\"Notes Title\" onChange={this.updateTitle} />\n      </div>\n    );\n  }\n}\n\nexport default ImageForm;\n","import React, { Component } from 'react';\nimport './NavBar.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport SignIn from './SignIn';\nimport { auth } from '../firebase';\nimport { withRouter } from \"react-router-dom\";\n\n\n\nclass NavBar extends Component {\n\n    constructor(props) {\n        super(props);\n        this.signOut = this.signOut.bind(this);\n    }\n\n    signOut() {\n        auth.signOut().then(function () {\n            this.props.history.push(\"/09-final-project-david_lie-tjauw/\");\n            console.log(this.props)\n            console.log(\"Logged Out!\")\n        }.bind(this)).catch(function (e) { alert(`There was an error signing you out: ${e}`) }.bind(this))\n    }\n\n\n\n    render() {\n        return (\n            <div id=\"NavBar\">\n                <Link id=\"home\" to=\"/09-final-project-david_lie-tjauw/\">\n                    <h2 id=\"titleNav\">NoteHero</h2>\n                </Link>\n                {this.props.authState ?\n                    <div id=\"options\">\n                        <Link className=\"navLink\" to=\"/09-final-project-david_lie-tjauw/uploadNotes\">Upload Notes</Link>\n                        <Link className=\"navLink\" to=\"/09-final-project-david_lie-tjauw/viewNotes\">View Notes</Link>\n                        <button id=\"signoutBtn\" onClick={this.signOut}>Sign Out</button>\n                    </div>\n                    :\n                    <div id=\"options\">\n                        <Link className=\"navLink\" to=\"/09-final-project-david_lie-tjauw/signIn\">Sign In</Link>\n                        <Link className=\"navLink\" to=\"/09-final-project-david_lie-tjauw/signUp\">Sign Up</Link>\n                    </div>\n                }\n\n\n            </div>\n        );\n    }\n}\n\nexport default withRouter(NavBar);\n","import React, { Component } from 'react';\nimport './YourNote.css';\nimport { auth } from '../firebase';\nvar firebase = require('firebase');\n\nclass YourNote extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isEditing: false,\n            // text: this.props.location.state.text,\n            text: '',\n            key: this.props.location.state.key,\n        }\n\n\n\n        this.enableEditing = this.enableEditing.bind(this);\n        this.submitChanges = this.submitChanges.bind(this);\n        this.updateText = this.updateText.bind(this);\n        this.cancelChanges = this.cancelChanges.bind(this);\n        this.getText = this.getText.bind(this);\n\n        var database = firebase.database();\n        this.database = database;\n    }\n\n    getText(email, id) {\n\n        console.log(\"Your text is being called;\")\n        console.log(`Here: ${email} and ${id}`)\n        let user = email.split('@')[0];\n\n        this.database.ref(`${user}/${id}`).on(\"value\", function (snapshot) {\n            this.setState({ text: snapshot.child('text').val() });\n        }.bind(this))\n    }\n\n    componentDidMount() {\n        auth.onAuthStateChanged((authUser) => {\n            authUser\n                ? this.getText(authUser.email, this.state.key)\n                : this.setState({ text: '' })\n        })\n    }\n\n    cancelChanges() {\n        this.setState({ isEditing: false })\n    }\n    updateText(e) {\n        this.setState({ text: e.target.value })\n    }\n    enableEditing() {\n        this.setState({ isEditing: true })\n    }\n\n    submitChanges() {\n        console.log(this.state.key)\n        // overright text in firebase\n        let userName = auth.currentUser.email.split('@')[0];\n\n        this.database.ref(`${userName}/${this.state.key}`).update({\n            text: this.state.text\n        }).then(function () {\n\n            // alert(this.props.location.state.updateNoteText)\n            // this.props.location.state.updateNoteText(this.state.key, this.state.text)\n            this.setState({ text: this.state.text })\n\n            this.setState({ isEditing: false })\n        }.bind(this))\n\n    }\n\n    render() {\n\n        var displayedText = <div >\n            <button class=\"noteButton\" onClick={this.enableEditing}>Edit Text</button>\n            <div id=\"displayText\">\n                <h1 id=\"noteTitle\">{this.props.location.state.title}</h1>\n                <p id=\"textToDisplay\">{this.state.text}</p>\n            </div>\n        </div>\n\n\n        var editingText = <div id=\"editText\">\n            <div>\n                <button class=\"noteButton\" onClick={this.submitChanges}>Submit Changes</button>\n                <button class=\"noteButton\" onClick={this.cancelChanges}>Cancel</button>\n            </div>\n            <textarea onChange={this.updateText} value={this.state.text}>\n            </textarea>\n        </div>\n\n        return (\n            <div id=\"yourNote\">\n\n                {this.state.isEditing ? editingText : displayedText}\n\n\n            </div>\n        )\n    }\n}\n\n\n\nexport default YourNote;","import React, { Component } from 'react';\nimport './Home.css';\n// import { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        }\n\n    }\n\n    componentDidMount() {\n\n    }\n\n\n    render() {\n        return (\n            <div id=\"homepage\">\n                <img src={require(\"./cartoon.png\")} />\n\n                <h1 style={{ color: '#34495e', textDecoration: 'none' }}>Welcome to NoteHero</h1>\n                <h3>We've all been there before...</h3>\n                <h3>You're professor hands you printed out notes that you then conveniently store at the bottom of your book bag along with all the additional handouts from other classes. Weeks later, you then find yourself frantically searching for that <i>one</i> handout for the upcoming exam. </h3>\n                <h3>Using NoteHero, you can avoid this scenario by easily saving and editing your printed notes for later use.</h3>\n                <h3>Simply upload a picture of your notes, and we'll take care of the rest so you can go back to focusing on what matters most.</h3>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\n// var firebase = require('firebase');\n// import 'firebase/auth';\n// import app from 'firebase/app';\nimport { auth } from './firebase';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\n// navbar components\nimport SignIn from './components/SignIn';\nimport SignUp from './components/SignUp';\nimport UserNotes from './components/UserNotes';\nimport ImageForm from './components/ImageForm';\nimport NavBar from './components/NavBar';\nimport YourNote from './components/YourNote';\nimport Home from './components/Home';\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    // app.initializeApp({\n    //   apiKey: \"AIzaSyBulew_BaByeY3dozl-MM537yQUS9-K8P8\",\n    //   authDomain: \"final-project-4678c.firebaseapp.com\",\n    //   databaseURL: \"https://final-project-4678c.firebaseio.com\",\n    //   projectId: \"final-project-4678c\",\n    //   storageBucket: \"final-project-4678c.appspot.com\",\n    //   messagingSenderId: \"942991858994\"\n    // });\n\n    // this.auth = app.auth();\n\n    // this.registerUserEmailAndPassword = this.registerUserEmailAndPassword.bind(this);\n    // this.signInUserEmailAndPassword = this.signInUserEmailAndPassword.bind(this);\n    // this.signOut = this.signOut.bind(this);\n\n    this.state = {\n      authState: null,\n    }\n\n  }\n\n  // registerUserEmailAndPassword(email, password) {\n  //   this.auth.createUserWithEmailAndPassword(email, password);\n  // }\n\n  // signInUserEmailAndPassword(email, password) {\n  //   this.auth.signInWithEmailAndPassword(email, password);\n  // }\n\n  // signOut() {\n  //   this.auth.signOut();\n  // }\n\n  componentDidMount() {\n    auth.onAuthStateChanged((authUser) => {\n      authUser\n        ? this.setState({ authState: authUser })\n        : this.setState({ authState: null });\n\n    }\n    );\n  }\n\n  render() {\n    console.log(`AUTH STATE: ${this.state.authState}`)\n    return (\n      <div className=\"App\">\n        <Router>\n          <div id=\"app\">\n            <NavBar authState={this.state.authState} />\n            {/* <Route path=\"/09-final-project-david_lie-tjauw/\" component={Home} /> */}\n\n            <Route exact path=\"/09-final-project-david_lie-tjauw/\" component={Home} />\n            <Route path=\"/09-final-project-david_lie-tjauw/signIn/\" component={SignIn} />\n            <Route path=\"/09-final-project-david_lie-tjauw/signUp/\" component={SignUp} />\n            <Route path=\"/09-final-project-david_lie-tjauw/uploadNotes/\" component={ImageForm} />\n            <Route path=\"/09-final-project-david_lie-tjauw/viewNotes/\" component={UserNotes} />\n            <Route path=\"/09-final-project-david_lie-tjauw/yourNote/\" component={YourNote} />\n\n          </div>\n        </Router>\n      </div >\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}